{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/filter\";\nimport List from \"./components/list\";\nimport axios from \"axios\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [filterWord, setFilterWord] = useState(\"\"); //Initial Data\n\n  useEffect(() => {\n    //fetch to localhost:3001\n    axios.get(\"https://restcountries.eu/rest/v2/all\") //setCountries con data\n    .then(response => setCountries(response.data));\n  }, []);\n\n  const handleClick = newCountry => {\n    const findit = countries.find(country => country.name.toLowerCase() === newCountry.name.toLowerCase());\n    if (findit) alert(`${newCountry.name} is already added to phonebook`);else setCountries(countries.concat(newCountry));\n  };\n\n  const handleSearch = word => {\n    setFilterWord(word);\n  };\n\n  const filteredList = countries.filter(pers => pers.name.toLowerCase().includes(filterWord.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), filterWord === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        countrySelected: handleSearch,\n        countries: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(App, \"loXjlHNolH718tcMGzw2mQG9u3k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/App.js"],"names":["React","useState","useEffect","Filter","List","axios","App","countries","setCountries","filterWord","setFilterWord","get","then","response","data","handleClick","newCountry","findit","find","country","name","toLowerCase","alert","concat","handleSearch","word","filteredList","filter","pers","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAFgB,CAIhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,KAAK,CACFM,GADH,CACO,sCADP,EAEE;AAFF,KAGGC,IAHH,CAGSC,QAAD,IAAcL,YAAY,CAACK,QAAQ,CAACC,IAAV,CAHlC;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,WAAW,GAAIC,UAAD,IAAgB;AAClC,UAAMC,MAAM,GAAGV,SAAS,CAACW,IAAV,CACZC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BL,UAAU,CAACI,IAAX,CAAgBC,WAAhB,EAD/B,CAAf;AAGA,QAAIJ,MAAJ,EAAYK,KAAK,CAAE,GAAEN,UAAU,CAACI,IAAK,gCAApB,CAAL,CAAZ,KACKZ,YAAY,CAACD,SAAS,CAACgB,MAAV,CAAiBP,UAAjB,CAAD,CAAZ;AACN,GAND;;AAQA,QAAMQ,YAAY,GAAIC,IAAD,IAAU;AAC7Bf,IAAAA,aAAa,CAACe,IAAD,CAAb;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAGnB,SAAS,CAACoB,MAAV,CAAkBC,IAAD,IACpCA,IAAI,CAACR,IAAL,CAAUC,WAAV,GAAwBQ,QAAxB,CAAiCpB,UAAU,CAACY,WAAX,EAAjC,CADmB,CAArB;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGf,UAAU,KAAK,EAAf,gBACC,qCADD,gBAGC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,eAAe,EAAEe,YAAvB;AAAqC,QAAA,SAAS,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBANJ;AAAA,kBADF;AAcD,CA1CD;;GAAMpB,G;;KAAAA,G;AA4CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/filter\";\nimport List from \"./components/list\";\n\nimport axios from \"axios\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [filterWord, setFilterWord] = useState(\"\");\n\n  //Initial Data\n  useEffect(() => {\n    //fetch to localhost:3001\n    axios\n      .get(\"https://restcountries.eu/rest/v2/all\")\n      //setCountries con data\n      .then((response) => setCountries(response.data));\n  }, []);\n\n  const handleClick = (newCountry) => {\n    const findit = countries.find(\n      (country) => country.name.toLowerCase() === newCountry.name.toLowerCase()\n    );\n    if (findit) alert(`${newCountry.name} is already added to phonebook`);\n    else setCountries(countries.concat(newCountry));\n  };\n\n  const handleSearch = (word) => {\n    setFilterWord(word);\n  };\n  const filteredList = countries.filter((pers) =>\n    pers.name.toLowerCase().includes(filterWord.toLowerCase())\n  );\n\n  return (\n    <>\n      <h2>Find countries</h2>\n      <Filter handleSearch={handleSearch} />\n      {filterWord === \"\" ? (\n        <></>\n      ) : (\n        <>\n          <h2>Countries</h2>\n          <List countrySelected={handleSearch} countries={filteredList} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}