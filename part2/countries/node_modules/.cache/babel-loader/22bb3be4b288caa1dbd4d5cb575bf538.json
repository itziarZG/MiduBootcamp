{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/components/list.js\";\nimport React from \"react\";\n\nconst List = ({\n  countries\n}) => {\n  const message = \"\";\n  if (countries.length > 10) message = \"Too many matches, specify another filter.\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: countries.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: countries[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", countries[0].capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", countries[0].population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: countries[0].languages.map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: lang.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/components/list.js"],"names":["React","List","countries","message","length","name","capital","population","languages","map","lang","country"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9B,QAAMC,OAAO,GAAG,EAAhB;AACA,MAAID,SAAS,CAACE,MAAV,GAAmB,EAAvB,EACED,OAAO,GAAG,2CAAV;AACF,sBACE;AAAA,cACGD,SAAS,CAACE,MAAV,KAAqB,CAArB,gBACC;AAAA,8BACE;AAAA,kBAAKF,SAAS,CAAC,CAAD,CAAT,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAaH,SAAS,CAAC,CAAD,CAAT,CAAaI,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,mCAAgBJ,SAAS,CAAC,CAAD,CAAT,CAAaK,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBACGL,SAAS,CAAC,CAAD,CAAT,CAAaM,SAAb,CAAuBC,GAAvB,CAA4BC,IAAD,iBAC1B;AAAA,oBAAKA,IAAI,CAACL;AAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAaC;AAAA,gBACGH,SAAS,CAACO,GAAV,CAAeE,OAAD,iBACb;AAAA,+BACE;AAAA,oBAAOA,OAAO,CAACN;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,SAAQM,OAAO,CAACN,IAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAdJ,mBADF;AA2BD,CA/BD;;KAAMJ,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nconst List = ({ countries }) => {\n  const message = \"\";\n  if (countries.length > 10)\n    message = \"Too many matches, specify another filter.\";\n  return (\n    <>\n      {countries.length === 1 ? (\n        <div>\n          <h3>{countries[0].name}</h3>\n          <p>Capital: {countries[0].capital}</p>\n          <p>Population: {countries[0].population}</p>\n          <p>Languages</p>\n          <ul>\n            {countries[0].languages.map((lang) => (\n              <li>{lang.name}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <>\n          {countries.map((country) => (\n            <p key={country.name}>\n              <span>{country.name}</span>\n              {/* {\": \"}\n          {country.phone} */}\n            </p>\n          ))}\n        </>\n      )}\n    </>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}