{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/components/list.js\";\nimport React from \"react\";\n\nconst List = ({\n  countries\n}) => {\n  const message = \"\";\n  if (countries > 10) message = \"Too many matches, specify another filter.\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, country.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/countries/src/components/list.js"],"names":["React","List","countries","message","props","map","country","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9B,QAAMC,OAAO,GAAG,EAAhB;AACA,MAAID,SAAS,GAAG,EAAhB,EAAoBC,OAAO,GAAG,2CAAV;AACpB,sBACE;AAAA,cACGC,KAAK,CAACF,SAAN,CAAgBG,GAAhB,CAAqBC,OAAD,iBACnB;AAAA,6BACE;AAAA,kBAAOA,OAAO,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,OAAQD,OAAO,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAWD,CAdD;;KAAMN,I;AAeN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nconst List = ({ countries }) => {\n  const message = \"\";\n  if (countries > 10) message = \"Too many matches, specify another filter.\";\n  return (\n    <>\n      {props.countries.map((country) => (\n        <p key={country.name}>\n          <span>{country.name}</span>\n          {/* {\": \"}\n          {country.phone} */}\n        </p>\n      ))}\n    </>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}