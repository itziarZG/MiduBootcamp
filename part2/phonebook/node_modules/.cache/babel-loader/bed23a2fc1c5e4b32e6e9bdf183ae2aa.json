{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/filter\";\nimport Form from \"./components/form\";\nimport List from \"./components/list\";\nimport axiosServ from \"./services/axios\";\nimport \"./App.css\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [filterWord, setFilterWord] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [updateData, setUpdateData] = useState(false); //Initial Data\n  // useEffect(() => {\n  //   //fetch to localhost:3001\n  //   axiosServ.getPhones().then((response) => {\n  //     console.log(\"here\", response);\n  //     setPersons(response);\n  //   });\n  // }, []);\n  //update\n\n  useEffect(() => {\n    //fetch to localhost:3001\n    axiosServ.getPhones().then(response => {\n      console.log(\"h\", response);\n      setPersons(response);\n    });\n  }, [updateData]);\n\n  const handleClick = newPerson => {\n    const findit = persons.find(pers => pers.name.toLowerCase() === newPerson.name.toLowerCase());\n    if (findit) alert(`${newPerson.name} is already added to phonebook`);else {\n      axiosServ.addItem(newPerson).then(response => {\n        setUpdateData(prev => !prev);\n      }).catch(error => {\n        setErrorMessage({\n          mess: `${newPerson.name} has already added to server`,\n          color: \"green\"\n        });\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleSearch = word => {\n    setFilterWord(word);\n  };\n\n  const filteredList = persons.filter(pers => pers.name.toLowerCase().includes(filterWord.toLowerCase()));\n\n  const handleDelete = id => {\n    axiosServ.deleteItem(id).then(resp => setUpdateData(prev => !prev)).catch(error => {\n      setErrorMessage({\n        mess: `Phone '${error}' was already removed from server`,\n        color: \"red\"\n      });\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), errorMessage != \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `error ${errorMessage.color}`,\n      children: errorMessage.mess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Filter, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new One\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        handleDelete: handleDelete,\n        persons: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wqaTjxt6gIH9aQ1bG812BttYyps=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ichi/Desktop/DEV/REPOSITORIOS VARIOS/MiduBootcamp/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Filter","Form","List","axiosServ","App","persons","setPersons","filterWord","setFilterWord","errorMessage","setErrorMessage","updateData","setUpdateData","getPhones","then","response","console","log","handleClick","newPerson","findit","find","pers","name","toLowerCase","alert","addItem","prev","catch","error","mess","color","setTimeout","handleSearch","word","filteredList","filter","includes","handleDelete","id","deleteItem","resp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/filter\";\nimport Form from \"./components/form\";\nimport List from \"./components/list\";\nimport axiosServ from \"./services/axios\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterWord, setFilterWord] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [updateData, setUpdateData] = useState(false);\n  //Initial Data\n  // useEffect(() => {\n  //   //fetch to localhost:3001\n  //   axiosServ.getPhones().then((response) => {\n  //     console.log(\"here\", response);\n  //     setPersons(response);\n  //   });\n  // }, []);\n\n  //update\n  useEffect(() => {\n    //fetch to localhost:3001\n    axiosServ.getPhones().then((response) => {\n      console.log(\"h\", response);\n      setPersons(response);\n    });\n  }, [updateData]);\n\n  const handleClick = (newPerson) => {\n    const findit = persons.find(\n      (pers) => pers.name.toLowerCase() === newPerson.name.toLowerCase()\n    );\n    if (findit) alert(`${newPerson.name} is already added to phonebook`);\n    else {\n      axiosServ\n        .addItem(newPerson)\n        .then((response) => {\n          setUpdateData((prev) => !prev);\n        })\n        .catch((error) => {\n          setErrorMessage({\n            mess: `${newPerson.name} has already added to server`,\n            color: \"green\",\n          });\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleSearch = (word) => {\n    setFilterWord(word);\n  };\n  const filteredList = persons.filter((pers) =>\n    pers.name.toLowerCase().includes(filterWord.toLowerCase())\n  );\n  const handleDelete = (id) => {\n    axiosServ\n      .deleteItem(id)\n      .then((resp) => setUpdateData((prev) => !prev))\n      .catch((error) => {\n        setErrorMessage({\n          mess: `Phone '${error}' was already removed from server`,\n          color: \"red\",\n        });\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      <h1>Phonebook</h1>\n      {errorMessage != \"\" ? (\n        <div className={`error ${errorMessage.color}`}>{errorMessage.mess}</div>\n      ) : (\n        <></>\n      )}\n      <Filter handleSearch={handleSearch} />\n      <h2>Add new One</h2>\n      <Form handleClick={handleClick} />\n      <h2>Numbers</h2>\n      <ul>\n        <List handleDelete={handleDelete} persons={filteredList} />\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}